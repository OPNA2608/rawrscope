name: CI
on: [push]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: nightly
    - uses: actions/checkout@v1
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libasound2-dev
    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: choco install llvm
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ matrix.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ matrix.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ matrix.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Test
      run: cargo test
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: nightly
    - uses: actions/checkout@v1
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libasound2-dev
    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: choco install llvm
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ matrix.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ matrix.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ matrix.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build --profile deploy -Z unstable-options
    - uses: actions/upload-artifact@v1
      with:
        name: rawrscope-${{ matrix.os }}
        path: target/deploy/rawrscope
      if: matrix.os != 'windows-latest'
    - uses: actions/upload-artifact@v1
      with:
        name: rawrscope-${{ matrix.os }}
        path: target/deploy/rawrscope.exe
      if: matrix.os == 'windows-latest'
